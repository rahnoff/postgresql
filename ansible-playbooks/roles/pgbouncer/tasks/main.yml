- name: Extract an archive
  ansible.builtin.unarchive:
    src: pgbouncer.tar.gz
    dest: /usr/local/bin

- name: Move PgBouncer libraries to a respective directory
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    remote_src: yes
  loop:
    - { src: '/usr/local/bin/libcares.so.2', dest: '/usr/lib/x86_64-linux-gnu' }
    - { src: '/usr/local/bin/libevent-2.1.so.7', dest: '/usr/lib/x86_64-linux-gnu' } 

- name: Create PgBouncer config, data and log directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
  loop:
    - /etc/pgbouncer
    - /var/lib/pgbouncer
    - /var/log/pgbouncer

- name: Change an ownership of PgBouncer directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    owner: postgres
    group: postgres
  loop:
    - /var/lib/pgbouncer
    - /var/log/pgbouncer

- name: Copy PgBouncer config and systemd unit files
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  loop:
    - { src: 'pgbouncer.ini', dest: '/etc/pgbouncer' }
    - { src: 'userlist.txt', dest: '/etc/pgbouncer' }
    - { src: 'pgbouncer.service', dest: '/etc/systemd/system' }

- name: Reread systemd configs
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Start and enable PgBouncer
  ansible.builtin.systemd_service:
    name: pgbouncer
    state: started
    enabled: true
    masked: true
